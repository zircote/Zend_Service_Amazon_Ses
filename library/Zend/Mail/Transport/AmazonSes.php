<?php
class Zend_Mail_Transport_AmazonSes extends Zend_Mail_Transport_Abstract
{
    /**
     * The message id for the last successfully sent message
     * @var string
     */
    protected $_lastMessageId;
    /**
     * Amazon Simple Email Service Object
     * @var Zend_Service_Amazon_Ses
     */
    protected $_ses;
    protected $_defaultEndpoint = 'https://email.us-east-1.amazonaws.com';
    /**
     * Constructor
     * Recongized $options keys are:
     * + accessKey: Amazon AWS Access key
     * + secretKey: Amazon AWS Secret key
     * + endpoint: Amazon SES endpoint url
     *
     * @param  Zend_Config|array $options
     * @throws InvalidArgumentException If $options is neither an array or Zend_Config object
     */
    public function __construct ($options = array())
    {
        if ($options instanceof Zend_Config) {
            $options = $options->toArray();
        }
        $this->_setSes($options);
    }
    /**
     * Builds and stores a SES service object with the class
     *
     * @param  array $options
     * @return void
     */
    protected function _setSes (array $options)
    {
        $accessKey = (isset($options['accessKey'])) ? $options['accessKey'] : null;
        $secretKey = (isset($options['secretKey'])) ? $options['secretKey'] : null;
        $this->_ses = new Zend_Service_Amazon_Ses($accessKey, $secretKey);
        $endpoint = (isset($options['endpoint'])) ? $options['endpoint'] : $this->_defaultEndpoint;
        $this->_ses->setEndpoint(Zend_Uri::factory($endpoint));
    }
    /**
     * Passes an email to the Amazon Simple Email Service Object
     *
     * @return void
     */
    protected function _sendMail ()
    {
        $this->_lastMessageId = $this->_ses->sendRawEmail(
            $this->header.$this->EOL.$this->body.$this->EOL,
            $this->_mail->getFrom() ?  : '', $this->_mail->getRecipients()
        );
    }
    /**
     * Returns the last message id generated by Amazon's Simple Email Service
     * @return string
     */
    public function getLastMessageId ()
    {
        return $this->_lastMessageId;
    }
}